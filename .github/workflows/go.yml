name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: golang

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres
        env:
          POSTGRES_DB: test
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_SSLMODE: disable
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongodb:
        image: mongo
        env:
          MONGO_INITDB_DATABASE: api

      sftp:
        image: atmoz/sftp
        env:
          SFTP_USERS: foo:pass
          SFTP_PASSWORD_AUTH: false
        options: foo:pass:::upload

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
          xpack.security.enabled: false
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3
        
      - name: Setup Go environment
        uses: actions/setup-go@v4.0.0
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.19
          cache: true

      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          version: v1.51.2
          args: --timeout 10m -v -c .golangci.yml

      - name: Test
        run: |
          curl -s https://raw.githubusercontent.com/thalesfsp/configurer/main/resources/install.sh | sh
          make test coverage
          
      - name: Integration test
        run: |
          curl -s https://raw.githubusercontent.com/thalesfsp/configurer/main/resources/install.sh | sh
          make test-integration coverage
